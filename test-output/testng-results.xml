<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="2" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-04-18T11:49:04 IST" name="Registrationsuit" finished-at="2023-04-18T11:50:21 IST" duration-ms="76228">
    <groups>
    </groups>
    <test started-at="2023-04-18T11:49:04 IST" name="ChromeTest" finished-at="2023-04-18T11:49:45 IST" duration-ms="40772">
      <class name="TestClass.Verifyregisterpage">
        <test-method is-config="true" signature="launchmultiplebrowsers(java.lang.String)[pri:0, instance:TestClass.Verifyregisterpage@7cc0cdad]" started-at="2023-04-18T11:49:04 IST" name="launchmultiplebrowsers" finished-at="2023-04-18T11:49:11 IST" duration-ms="6339" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchmultiplebrowsers -->
        <test-method is-config="true" signature="storebojectofpomclasses()[pri:0, instance:TestClass.Verifyregisterpage@7cc0cdad]" started-at="2023-04-18T11:49:11 IST" name="storebojectofpomclasses" finished-at="2023-04-18T11:49:11 IST" duration-ms="52" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storebojectofpomclasses -->
        <test-method is-config="true" signature="openapplication()[pri:0, instance:TestClass.Verifyregisterpage@7cc0cdad]" started-at="2023-04-18T11:49:11 IST" name="openapplication" finished-at="2023-04-18T11:49:14 IST" duration-ms="3073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openapplication -->
        <test-method signature="validatemsgforallblankfield()[pri:0, instance:TestClass.Verifyregisterpage@7cc0cdad]" started-at="2023-04-18T11:49:14 IST" name="validatemsgforallblankfield" finished-at="2023-04-18T11:49:21 IST" duration-ms="7138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatemsgforallblankfield -->
        <test-method is-config="true" signature="getscreenshotoffailtestcases(org.testng.ITestResult)[pri:0, instance:TestClass.Verifyregisterpage@7cc0cdad]" started-at="2023-04-18T11:49:21 IST" name="getscreenshotoffailtestcases" finished-at="2023-04-18T11:49:21 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatemsgforallblankfield status=SUCCESS method=Verifyregisterpage.validatemsgforallblankfield()[pri:0, instance:TestClass.Verifyregisterpage@7cc0cdad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getscreenshotoffailtestcases -->
        <test-method is-config="true" signature="openapplication()[pri:0, instance:TestClass.Verifyregisterpage@7cc0cdad]" started-at="2023-04-18T11:49:21 IST" name="openapplication" finished-at="2023-04-18T11:49:22 IST" duration-ms="617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openapplication -->
        <test-method signature="validateinvalidformatofallfields()[pri:1, instance:TestClass.Verifyregisterpage@7cc0cdad]" started-at="2023-04-18T11:49:22 IST" name="validateinvalidformatofallfields" finished-at="2023-04-18T11:49:44 IST" duration-ms="22702" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Fistname is accept numeric value] but found [firstname should not accept numeric value],
expected [lastname is accept numeric value] but found [lastname should not accept numeric value]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Fistname is accept numeric value] but found [firstname should not accept numeric value],
expected [lastname is accept numeric value] but found [lastname should not accept numeric value]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at TestClass.Verifyregisterpage.validateinvalidformatofallfields(Verifyregisterpage.java:148)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateinvalidformatofallfields -->
        <test-method is-config="true" signature="getscreenshotoffailtestcases(org.testng.ITestResult)[pri:0, instance:TestClass.Verifyregisterpage@7cc0cdad]" started-at="2023-04-18T11:49:44 IST" name="getscreenshotoffailtestcases" finished-at="2023-04-18T11:49:45 IST" duration-ms="177" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateinvalidformatofallfields status=FAILURE method=Verifyregisterpage.validateinvalidformatofallfields()[pri:1, instance:TestClass.Verifyregisterpage@7cc0cdad] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getscreenshotoffailtestcases -->
        <test-method is-config="true" signature="emptypomobjects()[pri:0, instance:TestClass.Verifyregisterpage@7cc0cdad]" started-at="2023-04-18T11:49:45 IST" name="emptypomobjects" finished-at="2023-04-18T11:49:45 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptypomobjects -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:TestClass.Verifyregisterpage@7cc0cdad]" started-at="2023-04-18T11:49:45 IST" name="closebrowser" finished-at="2023-04-18T11:49:45 IST" duration-ms="559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- TestClass.Verifyregisterpage -->
    </test> <!-- ChromeTest -->
    <test started-at="2023-04-18T11:49:45 IST" name="EdgeTest" finished-at="2023-04-18T11:50:21 IST" duration-ms="35398">
      <class name="TestClass.Verifyregisterpage">
        <test-method is-config="true" signature="launchmultiplebrowsers(java.lang.String)[pri:0, instance:TestClass.Verifyregisterpage@4c402120]" started-at="2023-04-18T11:49:45 IST" name="launchmultiplebrowsers" finished-at="2023-04-18T11:49:49 IST" duration-ms="3937" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edgebrowser]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchmultiplebrowsers -->
        <test-method is-config="true" signature="storebojectofpomclasses()[pri:0, instance:TestClass.Verifyregisterpage@4c402120]" started-at="2023-04-18T11:49:49 IST" name="storebojectofpomclasses" finished-at="2023-04-18T11:49:49 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- storebojectofpomclasses -->
        <test-method is-config="true" signature="openapplication()[pri:0, instance:TestClass.Verifyregisterpage@4c402120]" started-at="2023-04-18T11:49:49 IST" name="openapplication" finished-at="2023-04-18T11:49:52 IST" duration-ms="2615" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openapplication -->
        <test-method signature="validatemsgforallblankfield()[pri:0, instance:TestClass.Verifyregisterpage@4c402120]" started-at="2023-04-18T11:49:52 IST" name="validatemsgforallblankfield" finished-at="2023-04-18T11:49:58 IST" duration-ms="6139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatemsgforallblankfield -->
        <test-method is-config="true" signature="getscreenshotoffailtestcases(org.testng.ITestResult)[pri:0, instance:TestClass.Verifyregisterpage@4c402120]" started-at="2023-04-18T11:49:58 IST" name="getscreenshotoffailtestcases" finished-at="2023-04-18T11:49:58 IST" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatemsgforallblankfield status=SUCCESS method=Verifyregisterpage.validatemsgforallblankfield()[pri:0, instance:TestClass.Verifyregisterpage@4c402120] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getscreenshotoffailtestcases -->
        <test-method is-config="true" signature="openapplication()[pri:0, instance:TestClass.Verifyregisterpage@4c402120]" started-at="2023-04-18T11:49:58 IST" name="openapplication" finished-at="2023-04-18T11:49:59 IST" duration-ms="639" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openapplication -->
        <test-method signature="validateinvalidformatofallfields()[pri:1, instance:TestClass.Verifyregisterpage@4c402120]" started-at="2023-04-18T11:49:59 IST" name="validateinvalidformatofallfields" finished-at="2023-04-18T11:50:20 IST" duration-ms="21306" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [Fistname is accept numeric value] but found [firstname should not accept numeric value],
expected [lastname is accept numeric value] but found [lastname should not accept numeric value]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Fistname is accept numeric value] but found [firstname should not accept numeric value],
expected [lastname is accept numeric value] but found [lastname should not accept numeric value]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at TestClass.Verifyregisterpage.validateinvalidformatofallfields(Verifyregisterpage.java:148)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateinvalidformatofallfields -->
        <test-method is-config="true" signature="getscreenshotoffailtestcases(org.testng.ITestResult)[pri:0, instance:TestClass.Verifyregisterpage@4c402120]" started-at="2023-04-18T11:50:20 IST" name="getscreenshotoffailtestcases" finished-at="2023-04-18T11:50:20 IST" duration-ms="194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateinvalidformatofallfields status=FAILURE method=Verifyregisterpage.validateinvalidformatofallfields()[pri:1, instance:TestClass.Verifyregisterpage@4c402120] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getscreenshotoffailtestcases -->
        <test-method is-config="true" signature="emptypomobjects()[pri:0, instance:TestClass.Verifyregisterpage@4c402120]" started-at="2023-04-18T11:50:20 IST" name="emptypomobjects" finished-at="2023-04-18T11:50:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptypomobjects -->
        <test-method is-config="true" signature="closebrowser()[pri:0, instance:TestClass.Verifyregisterpage@4c402120]" started-at="2023-04-18T11:50:20 IST" name="closebrowser" finished-at="2023-04-18T11:50:21 IST" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closebrowser -->
      </class> <!-- TestClass.Verifyregisterpage -->
    </test> <!-- EdgeTest -->
  </suite> <!-- Registrationsuit -->
</testng-results>
